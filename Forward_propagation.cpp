#include "neural_network.h"
#include <stdio.h>
#include <iostream>
#include <ap_fixed.h>



// This is the top function defined during project initialization
ap_fixed<10, 5, AP_RND>  Forward_propagation(ap_fixed<8, 2, AP_RND>  X[9]){



	#pragma HLS INTERFACE mode=m_axi depth=1 port=X
	#pragma HLS INTERFACE mode=s_axilite port=return


	// fixing the format of X, adding 1 in the start of the array for the bias
	ap_fixed<8, 2, AP_RND>  X_normalized[10];

	X_normalized[0] = 1;

	X_Normalization:
	for(int i = 1; i < 10; i++){
		X_normalized[i] = X[i-1];
	}


	// Weights of the trained Network

	ap_fixed<10, 4, AP_RND>  theta1[12][10] ={
			{-0.16050975, 0.45256403, 0.061439224, 0.5160875, 0.5665985, -0.0020467476, 0.17298199, 0.09625119, 0.3369104, 0.051174596},
			{-0.1580668, -0.8331394, -0.32583648, -0.04160904, 0.42034897, 0.20916556, 0.42889318, -0.05485084, 0.13429321, -0.25771064},
			{0.0818594, -0.06860934, -0.22510047, -0.24562123, 0.49488607, 0.38461086, 0.013478899, 0.026764356, 0.10782485, -0.0007172744},
			{0.3113477, 0.44152856, -0.07255661, -0.12545809, -0.37415123, -0.2971201, -0.3768334, -0.06510853, 0.09931848, 0.4265598},
			{0.4986063, -0.67971545, -0.28479904, 0.35020977, 0.15468006, 0.0069802976, 0.08717425, 0.14445432, -0.48653826, -0.22565559},
			{0.289606, -0.3626898, -0.5906796, -0.018283794, -0.0797716, 0.39836365, 0.10123335, 0.39650637, 0.18936609, -0.60161847},
			{0.4357064, -0.49878517, -0.60038596, -0.33763948, -0.2812453, 0.3422682, 0.28827924, 0.03951975, 0.20950063, 0.1509624},
			{0.49358943, -0.29518518, -0.5317892, -0.63566625, -0.07057287, -0.27125794, 0.15002073, 0.38942787, 0.29055294, 0.12523676},
			{-0.23589443, 0.06168419, 0.5447212, 0.28486994, -0.314677, 0.13191308, 0.29192346, 0.35122433, 0.588715, 0.6653806},
			{0.5287286, -0.32255507, 0.27403265, 0.12940753, 0.11535694, -0.05072034, 0.1397866, -0.20968899, -0.14616017, -0.6163779},
			{0.033633523, -0.840984, -0.57586163, -0.23046839, 0.24114531, 0.3441299, 0.5403979, 0.4789132, 0.11668501, -0.11113463},
			{-0.2771947, 0.5626512, 0.4717651, 0.34242883, -0.0630898, 0.28598052, 0.24936892, 0.29442722, -0.2004803, -0.09761987}
	};

	ap_fixed<10, 4, AP_RND>  theta2[16][13] = {
			{-0.14117807, -0.34540993, 0.038805354, -0.04193717, -0.18637007, 0.0745048, -0.10275051, 0.09974801, -0.18937686, -0.36770004, 0.017646264, 0.26474392, -0.09699784},
			{0.3490689, -0.23805241, -0.63325745, 0.256435, 0.37534314, 0.62486017, 0.20174266, 0.1854629, -0.25532234, -0.3685141, 0.60939234, -1.9825754, 0.07707014},
			{-0.054207727, 0.04536866, -0.34115183, 0.33396298, -0.07170203, -0.17205356, -0.32685336, -0.3427398, 0.1841543, -0.31568554, -0.47060734, -0.3176561, -0.16169058},
			{0.33078015, 0.3596012, -0.6520634, 0.61162794, -0.12051145, 0.4444839, -0.10359623, 0.43267384, -0.1217598, 0.11900459, 0.15839836, -0.004399891, -0.2930321},
			{0.2554297, 0.4140492, 0.12430139, 0.31186837, 0.3472519, 0.4847082, -0.078984104, -0.111742094, -0.4744671, 0.5331972, 0.19374354, 0.35614696, 0.56472486},
			{0.0, -0.21700686, -0.06152031, -0.25791955, -0.4179552, 0.10822594, 0.1920358, -0.30683547, 0.19524193, -0.19301984, -0.0964697, -0.23407756, -0.13653642},
			{0.0, -0.4387578, -0.3090408, 0.25562316, -0.2920306, 0.17578292, -0.45894548, 0.052603602, 0.32303417, -0.2617892, -0.28454015, -0.34506848, -0.036246628},
			{0.40082154, 0.5040466, -0.61239684, 0.3461875, -0.33242387, -0.32602122, -0.5347657, 0.5411206, 0.4915674, 0.081605844, 0.5240354, 0.21993281, -0.024679283},
			{0.20385922, -0.028024407, -0.06976682, 0.34905162, -1.5902835, 0.71031606, 0.5552442, 0.545938, -0.38033125, -0.18729065, 0.14553203, 0.56498736, -0.7273288},
			{0.5206964, -0.17406584, 0.06307604, 0.27109122, 0.68682295, 0.29351988, 0.2511587, 0.4755189, 0.06413422, -0.45036563, 0.48616534, 0.13361412, -0.17481436},
			{0.5004924, -0.33516076, -0.26114824, -0.09332878, 0.47376552, 0.3445877, 0.15672366, 0.42105827, 0.31948757, -0.3654424, 0.6036905, -0.23353474, 0.208723},
			{0.26076508, -0.2894723, 0.07454342, -0.23852988, 1.147719, 0.53037256, 0.16474803, 0.91667646, 0.52242583, 0.032336805, 0.20687705, 0.49262136, -0.52622306},
			{0.4756763, -0.41655502, -0.26771975, -0.09495071, 0.7124844, 0.6005201, 0.13725047, 0.6753298, 0.6887228, -0.13767676, 0.4638645, 0.03900292, -0.31261045},
			{0.43446943, 0.28122807, -0.33981034, -0.24551305, -0.0817411, -0.2527558, -0.39409974, -0.050510257, -0.023219692, -0.19415863, 0.1928111, -0.7588495, -0.06993954},
			{0.2412504, 0.4118526, -0.3702702, 0.43444362, -0.35526115, 0.21191218, 0.21225199, -0.40788296, -0.60991883, 0.06934025, -0.06027198, -0.36848322, 0.10660841},
			{0.32813534, -0.2783872, 0.16054238, 0.19637729, 0.10186004, 0.86719364, 0.628987, 0.98210484, 0.5943537, -0.13669822, -0.08684607, 0.55903983, -0.55461407}
	};

	ap_fixed<10, 4, AP_RND>  theta3[12][17]={
			{0.35538223, -0.18434188, -1.0533571, -0.24369203, 0.5441766, 0.54965997, 0.008095801, -0.35081196, 0.47060364, 0.8102488, 0.51738185, 0.94664675, -0.006740479, 0.6253082, -0.3251176, -0.08996567, 0.29954273},
			{0.34136438, 0.13498434, -0.9661438, 0.042599432, -0.3468636, 0.3919317, 0.020400435, 0.27957124, 0.061249834, 0.49831963, 0.013848892, 0.18210053, 0.20979312, 0.9157614, -0.468817, 0.389103, -0.25391683},
			{0.35355178, -0.026454227, -0.7838141, 0.13545527, 0.51434773, 0.012610411, -0.36615032, -0.15799132, 0.49379244, 0.11887803, 0.5762728, 0.7686269, 0.44430155, 0.5782043, 0.14044736, 0.52011704, 0.54380214},
			{0.39166498, -0.4585569, -0.32728562, 0.44752124, 0.13021992, 0.17608519, 0.3885355, -0.44035736, 0.4282675, 0.586395, 0.20404553, 0.5930955, -0.005900331, 0.45253274, -0.28285742, -0.30504358, 0.28155854},
			{-0.011945023, 0.4509281, 0.18563133, 0.3278659, -0.07042555, -0.32241523, 0.16022831, 0.22049499, 0.050141312, -0.010816893, 0.15206788, 0.14982212, -0.45595005, -0.075912744, -0.010875165, -0.015212942, 0.14302862},
			{-0.28007972, -0.33297086, 0.20072323, -0.39525157, 0.32830712, -0.4749195, -0.056836367, 0.11113471, -0.14656352, 0.34581462, 0.29433656, 0.50057817, 0.8664368, 1.0476524, 1.1802765, -0.46013185, 0.8898617},
			{0.37344906, -0.17067316, -1.0348306, -0.4066764, 0.46674165, -0.23121922, 0.4444555, 0.21150059, 0.41784665, 0.3445856, 0.19129996, 0.9827297, 0.31930262, 0.5557815, 0.2875387, 0.2676647, 0.6192523},
			{-0.14071381, -0.03295344, -1.4630233, 0.1261224, 0.39230898, 0.4541165, 0.16100872, 0.37134022, 0.45392987, -0.18592931, -0.49603012, -1.0155528, -0.77626246, -1.7038909, -0.9462759, -0.12216564, -0.9184658},
			{-0.12597372, -0.0813777, 1.292399, -0.16804613, 0.5522484, 0.4953354, -0.18733928, 0.07711804, 0.12837155, -0.39930794, -0.6313931, -0.70852, -1.0096263, -1.0417855, -0.50909185, 0.18435016, -1.0008878},
			{-0.04545037, 0.22388968, 2.146248, -0.20713785, -0.080569856, 0.5243241, -0.2402647, -0.21078286, 0.3611517, -0.3530215, -0.31389382, -0.13674565, -1.1545289, -0.83191377, 0.28680456, 0.6353952, -1.172081},
			{0.42506385, -0.09486215, -0.5192793, 0.24003224, 0.45824096, 0.29216743, -0.16741836, -0.23749901, -0.15732247, 0.5351857, 0.64742815, 0.53759044, -0.058710344, 1.1209842, -0.08902472, -0.06105829, -0.0134995505},
			{0.36495563, -0.1174252, -0.96264124, -0.11395977, 0.25929394, 0.055139136, -0.29706597, 0.08667922, 0.31521544, 0.207911, 0.65279204, 0.42042142, 0.45536086, 0.65924007, 0.21715036, 0.035194702, 0.13297798}
	};


	ap_fixed<10, 4, AP_RND>  theta4[13] = { 0.35456532, 0.780925, 0.27441394,0.78634393, 0.58394295, -0.57915664, -1.676825, 0.29391673,-1.7632037 ,-1.0226078 ,-0.89288455,0.38393825, 0.5097367};



	ap_fixed<10, 4, AP_RND>  h1[13];
	ap_fixed<10, 4, AP_RND>  h2[17];
	ap_fixed<10, 4, AP_RND>  h3[13];

	ap_fixed<10, 4, AP_RND>  h1_activ[13];
	ap_fixed<10, 4, AP_RND>  h2_activ[17];
	ap_fixed<10, 4, AP_RND>  h3_activ[13];


	int i=0,j=0;

	h1[0]=1.0;
	h1_activ[0]=1.0;

	first_layer:
	for(i=1;i<=12;i++){
		h1[i]=0.0;
		inner_first_layer:
		for(j=0;j <= 9;j++){
			h1[i]+= (X_normalized[j]*theta1[i-1][j]);
		}
		// ReLU activation function
		h1_activ[i] = h1[i] > ap_fixed<10, 4, AP_RND> (0.0) ? h1[i] : ap_fixed<10, 4, AP_RND> (0.0);
	}


	h2[0]=1.0;
	h2_activ[0]=1.0;

	second_layer:
	for(i=1;i<=16;i++){
		h2[i]=0.0;
		inner_second_layer:
		for(j=0;j<=12;j++){
			h2[i]+= (h1_activ[j]*theta2[i-1][j]);
		}
		// ReLU activation function
		h2_activ[i] = h2[i] > ap_fixed<10, 4, AP_RND> (0.0) ? h2[i] : ap_fixed<10, 4, AP_RND> (0.0);
	}


	h3[0]=1.0;
	h3_activ[0]=1.0;
	third_layer:
	for(i=1;i<=12;i++){
		h3[i]=0.0;
		inner_third_layer:
		for(j=0;j<=16;j++){
			h3[i]+= (h2_activ[j]*theta3[i-1][j]);
		}

		// ReLU activation function
		h3_activ[i] = h3[i] > ap_fixed<10, 4, AP_RND> (0.0) ? h3[i] : ap_fixed<10, 4, AP_RND> (0.0);
	}


	ap_fixed<10, 4, AP_RND_ZERO> ans[13];


	// Linear activation function
	output_layer:
	for(j=0;j<=12;j++){
		ans[j] = ap_fixed<10, 4, AP_RND_ZERO>(h3_activ[j]*theta4[j]);
	}



	ap_fixed<10, 5, AP_RND>  result = 0;
	summing_output:
	for(j=0;j<=12;j++){
		result += ans[j] ;
	}


	return result;

}


